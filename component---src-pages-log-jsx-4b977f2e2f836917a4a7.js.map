{"version":3,"sources":["webpack:///./src/components/months.jsx","webpack:///./src/helpers/daysInYear.js","webpack:///./src/components/calendar.jsx","webpack:///./src/helpers/dayOfYear.js","webpack:///./src/components/navigation.jsx","webpack:///./src/helpers/getYearsArray.js","webpack:///./src/components/tags.jsx","webpack:///./src/components/searchRes.jsx","webpack:///./src/pages/log.jsx","webpack:///./src/styles/calendar.module.scss","webpack:///./src/styles/searchRes.module.scss","webpack:///./src/styles/months.module.scss","webpack:///./src/styles/navigation.module.scss","webpack:///./node_modules/elasticlunr/elasticlunr.js","webpack:///./src/styles/tags.module.scss"],"names":["Months","months","Array","fill","map","_","i","Date","toLocaleDateString","undefined","month","push","className","styles","m","key","leapYear","year","Calendar","notes","days","daysInYear","offset","getDay","forEach","note","date","node","frontmatter","Math","floor","getFullYear","wrapper","calendar","day","title","to","fields","slug","Navigation","years","activeYear","setYear","setQuery","query","opaque","opacity","menu","style","onClick","active","search","placeholder","onChange","e","target","value","Tags","tags","tag","cursor","SearchRes","res","list","searchRes","Log","data","thisYear","useState","startYear","getYearsArray","site","siteMetadata","Index","load","siteSearchIndex","index","setIndex","searchResults","setSearchResults","useEffect","expand","ref","documentStore","getDoc","Helmet","length","allMarkdownRemark","edges","filter","edge","module","exports","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","elasticlunr","config","idx","pipeline","add","trimmer","stopWordFilter","stemmer","call","version","lunr","utils","warn","this","message","console","toString","obj","EventEmitter","events","prototype","addListener","args","slice","arguments","fn","pop","names","TypeError","name","hasHandler","removeListener","fnIndex","indexOf","splice","emit","apply","tokenizer","str","isArray","arr","token","t","toLowerCase","out","item","tokens","split","seperator","concat","trim","defaultSeperator","setSeperator","sep","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","serialised","fnName","Error","fns","after","existingFn","newFn","pos","before","remove","run","tokenLength","pipelineLength","j","reset","get","toJSON","_fields","_ref","DocumentStore","eventEmitter","_idfCache","on","bind","off","serialisedData","field","InvertedIndex","addField","fieldName","setRef","refName","saveDocument","save","addDoc","doc","emitEvent","docRef","fieldTokens","addFieldLength","tokenCount","termFrequency","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","removeDoc","removeToken","updateDoc","idf","term","cacheKey","Object","hasOwnProperty","df","getDocFreq","log","getFields","userConfig","configStr","JSON","stringify","Configuration","queryTokens","queryResults","fieldSearchResults","fieldSearch","fieldBoost","boost","results","score","sort","a","b","booleanType","bool","scores","docTokens","expandToken","queryTokenScores","docs","getDocs","filteredDocs","fieldSearchStats","getTermFrequency","fieldLength","getFieldLength","fieldLengthNorm","penality","mergeScores","coordNorm","accumScores","op","intersection","n","indexJson","use","plugin","unshift","_save","docInfo","store","copy","constructor","attr","clone","updateFieldLength","c","RegExp","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","replace","fp","exec","stopWords","clearStopWords","addStopWords","words","word","resetStopWords","defaultStopWords","root","tokenInfo","hasToken","getNode","memo","parse","buildUserConfig","error","buildDefaultConfig","global_bool","global_expand","field_config","field_expand","addAllFields2UserConfig","SortedSet","elements","set","element","locationFor","toArray","ctx","elem","start","end","sectionLength","pivot","pivotElem","intersect","otherSet","intersectSet","a_len","b_len","union","longSet","shortSet","unionSet","shortSetElements"],"mappings":"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","file":"component---src-pages-log-jsx-4b977f2e2f836917a4a7.js","sourcesContent":["import React from 'react';\nimport styles from '../styles/months.module.scss';\n\nexport default function Months() {\n  const months = new Array(12).fill(0).map((_, i) => {\n    return new Date(`${i + 1}/1`).toLocaleDateString(undefined, {\n      month: 'short',\n    });\n  });\n\n  months.push('');\n\n  return (\n    <div className={styles.months}>\n      {months.map((m, i) => (\n        <span key={i}>{m}</span>\n      ))}\n    </div>\n  );\n}\n","export default (year) => (leapYear(year) ? 366 : 355);\n\nconst leapYear = (year) =>\n  (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n","import React from 'react';\nimport Months from './months';\nimport styles from '../styles/calendar.module.scss';\nimport daysInYear from '../helpers/daysInYear';\nimport dayOfYear from '../helpers/dayOfYear';\nimport { Link } from 'gatsby';\n\nexport default function Calendar({ year, notes }) {\n  const days = Array(daysInYear(year)).fill(0);\n\n  const offset = Array(new Date(year, 0, 1).getDay() - 1).fill(null);\n\n  notes.forEach(\n    (note) => (days[dayOfYear(new Date(note.node.frontmatter.date)) - 1] = note)\n  );\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.calendar}>\n        <div className={styles.days}>\n          {offset.map((_, i) => (\n            <div key={i} />\n          ))}\n          {days.map((day, i) =>\n            day ? (\n              <Link\n                title={day.node.frontmatter.title}\n                to={day.node.fields.slug}\n                key={i}\n                className={styles.note}\n              />\n            ) : (\n              <div className={styles.day} key={i} />\n            )\n          )}\n        </div>\n        <Months />\n      </div>\n    </div>\n  );\n}\n","export default (date) =>\n  Math.floor(\n    (date - new Date(date.getFullYear(), 0, 0)) / (1000 * 60 * 60 * 24)\n  );\n","import React from 'react';\nimport styles from '../styles/navigation.module.scss';\nimport { Link } from 'gatsby';\n\nexport default function Navigation({\n  years,\n  activeYear,\n  setYear,\n  setQuery,\n  query,\n}) {\n  const opaque = { opacity: query ? 0 : 1 };\n  return (\n    <ul className={styles.menu}>\n      <li style={opaque}>\n        <Link to=\"/\" title=\"Home\">\n          <h1>&#8601;</h1>\n        </Link>\n      </li>\n      {years.map((year) => (\n        <li\n          key={year}\n          onClick={() => setYear(year)}\n          className={year === activeYear && styles.active}\n          style={opaque}\n        >\n          <h1>{year}</h1>\n        </li>\n      ))}\n      <li className={styles.search}>\n        <input\n          placeholder=\"search\"\n          onChange={(e) => setQuery(e.target.value)}\n          className={styles.search}\n          value={query}\n        />\n        {query && <button onClick={() => setQuery('')}>&times;</button>}\n      </li>\n    </ul>\n  );\n}\n","export default (startYear, thisYear) => {\n  if (thisYear === startYear) {\n    return [startYear];\n  } else {\n    const years = [];\n    for (let year = startYear; year <= thisYear; year++) {\n      years.push(year);\n    }\n    return years;\n  }\n};\n","import React from 'react';\nimport styles from '../styles/tags.module.scss';\n\nexport default function Tags({ tags, onClick }) {\n  return (\n    <ul className={styles.tags}>\n      {tags.map((tag, i) => (\n        <li\n          key={i}\n          onClick={() => onClick(tag)}\n          style={{ cursor: onClick ? 'pointer' : 'default' }}\n        >\n          #{tag}\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styles from '../styles/searchRes.module.scss';\nimport Tags from './tags';\n\nexport default function SearchRes({ res, setQuery }) {\n  return (\n    <ul className={styles.list}>\n      {res.map((node, i) => (\n        <li key={i}>\n          <div className={styles.searchRes}>\n            <Link to={node.slug}>\n              <h3>{node.title}</h3>\n            </Link>\n            <Tags tags={node.tags} onClick={setQuery} />\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Calendar from '../components/calendar';\nimport Navigation from '../components/navigation';\nimport { graphql } from 'gatsby';\nimport getYearsArray from '../helpers/getYearsArray';\nimport Layout from '../layouts/layout.jsx';\nimport SearchRes from '../components/searchRes';\nimport { Index } from 'elasticlunr';\nimport { Helmet } from 'react-helmet';\n\nexport default function Log({ data }) {\n  const thisYear = new Date().getFullYear();\n  const [year, setYear] = useState(thisYear);\n  const years = getYearsArray(data.site.siteMetadata.startYear, thisYear);\n\n  const [index, setIndex] = useState(Index.load(data.siteSearchIndex.index));\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  useEffect(() => {\n    if (!index) setIndex(Index.load(data.siteSearchIndex.index));\n    setSearchResults(\n      index\n        .search(query, { expand: true })\n        .map(({ ref }) => index.documentStore.getDoc(ref))\n    );\n  }, [query]);\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`log_${year}`}</title>\n      </Helmet>\n      <Navigation\n        activeYear={year}\n        years={years}\n        setYear={setYear}\n        setQuery={setQuery}\n        query={query}\n      />\n      {searchResults.length ? (\n        <SearchRes res={searchResults} setQuery={setQuery} />\n      ) : (\n        <Calendar\n          year={year}\n          notes={data.allMarkdownRemark.edges.filter(\n            (edge) =>\n              new Date(edge.node.frontmatter.date).getFullYear() === year\n          )}\n        />\n      )}\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    siteSearchIndex {\n      index\n    }\n    site {\n      siteMetadata {\n        startYear\n      }\n    }\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            tags\n          }\n          excerpt\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"calendar-module--calendar--1PD8F\",\"days\":\"calendar-module--days--175a7\",\"wrapper\":\"calendar-module--wrapper--2oqTV\",\"day\":\"calendar-module--day--2TQpp\",\"note\":\"calendar-module--note--zPPiI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchRes\":\"searchRes-module--searchRes--Vy_86\",\"list\":\"searchRes-module--list--22jIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"months\":\"months-module--months--3b6T1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"navigation-module--menu--3DqY-\",\"active\":\"navigation-module--active--2ME3G\",\"search\":\"navigation-module--search--2wUAS\"};","/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2016 Oliver Nightingale\n * Copyright (C) 2016 Wei Song\n * MIT Licensed\n * @license\n */\n(function () {\n  /*!\n   * elasticlunr.js\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * Convenience function for instantiating a new elasticlunr index and configuring it\n   * with the default pipeline functions and the passed config function.\n   *\n   * When using this convenience function a new index will be created with the\n   * following functions already in the pipeline:\n   * \n   * 1. elasticlunr.trimmer - trim non-word character\n   * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the\n   * index\n   * 3. elasticlunr.stemmer - stems the tokens before entering the index.\n   *\n   *\n   * Example:\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.addField('id');\n   *       this.addField('title');\n   *       this.addField('body');\n   *       \n   *       //this.setRef('id'); // default ref is 'id'\n   *\n   *       this.pipeline.add(function () {\n   *         // some custom pipeline function\n   *       });\n   *     });\n   * \n   *    idx.addDoc({\n   *      id: 1, \n   *      title: 'Oracle released database 12g',\n   *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'\n   *    });\n   * \n   *    idx.addDoc({\n   *      id: 2, \n   *      title: 'Oracle released annual profit report',\n   *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'\n   *    });\n   * \n   *    # simple search\n   *    idx.search('oracle database');\n   * \n   *    # search with query-time boosting\n   *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   *\n   * @param {Function} config A function that will be called with the new instance\n   * of the elasticlunr.Index as both its context and first parameter. It can be used to\n   * customize the instance of new elasticlunr.Index.\n   * @namespace\n   * @module\n   * @return {elasticlunr.Index}\n   *\n   */\n  var elasticlunr = function elasticlunr(config) {\n    var idx = new elasticlunr.Index();\n    idx.pipeline.add(elasticlunr.trimmer, elasticlunr.stopWordFilter, elasticlunr.stemmer);\n    if (config) config.call(idx, idx);\n    return idx;\n  };\n\n  elasticlunr.version = \"0.9.5\"; // only used this to make elasticlunr.js compatible with lunr-languages\n  // this is a trick to define a global alias of elasticlunr\n\n  lunr = elasticlunr;\n  /*!\n   * elasticlunr.utils\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A namespace containing utils for the rest of the elasticlunr library\n   */\n\n  elasticlunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf Utils\n   */\n\n  elasticlunr.utils.warn = function (global) {\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n  }(this);\n  /**\n   * Convert an object to string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * an empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {object} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf Utils\n   */\n\n\n  elasticlunr.utils.toString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    }\n\n    return obj.toString();\n  };\n  /*!\n   * elasticlunr.EventEmitter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.EventEmitter is an event emitter for elasticlunr.\n   * It manages adding and removing event handlers and triggering events and their handlers.\n   *\n   * Each event could has multiple corresponding functions,\n   * these functions will be called as the sequence that they are added into the event.\n   * \n   * @constructor\n   */\n\n\n  elasticlunr.EventEmitter = function () {\n    this.events = {};\n  };\n  /**\n   * Binds a handler function to a specific event(s).\n   *\n   * Can bind a single function to many different events in one call.\n   *\n   * @param {String} [eventName] The name(s) of events to bind this function to.\n   * @param {Function} fn The function to call when an event is fired.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.addListener = function () {\n    var args = Array.prototype.slice.call(arguments),\n        fn = args.pop(),\n        names = args;\n    if (typeof fn !== \"function\") throw new TypeError(\"last argument must be a function\");\n    names.forEach(function (name) {\n      if (!this.hasHandler(name)) this.events[name] = [];\n      this.events[name].push(fn);\n    }, this);\n  };\n  /**\n   * Removes a handler function from a specific event.\n   *\n   * @param {String} eventName The name of the event to remove this function from.\n   * @param {Function} fn The function to remove from an event.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {\n    if (!this.hasHandler(name)) return;\n    var fnIndex = this.events[name].indexOf(fn);\n    if (fnIndex === -1) return;\n    this.events[name].splice(fnIndex, 1);\n    if (this.events[name].length == 0) delete this.events[name];\n  };\n  /**\n   * Call all functions that bounded to the given event.\n   *\n   * Additional data can be passed to the event handler as arguments to `emit`\n   * after the event name.\n   *\n   * @param {String} eventName The name of the event to emit.\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.emit = function (name) {\n    if (!this.hasHandler(name)) return;\n    var args = Array.prototype.slice.call(arguments, 1);\n    this.events[name].forEach(function (fn) {\n      fn.apply(undefined, args);\n    }, this);\n  };\n  /**\n   * Checks whether a handler has ever been stored against an event.\n   *\n   * @param {String} eventName The name of the event to check.\n   * @private\n   * @memberOf EventEmitter\n   */\n\n\n  elasticlunr.EventEmitter.prototype.hasHandler = function (name) {\n    return name in this.events;\n  };\n  /*!\n   * elasticlunr.tokenizer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * A function for splitting a string into tokens.\n   * Currently English is supported as default.\n   * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change\n   * the value of this property to set how you want strings are split into tokens.\n   * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with\n   * text process, then you'd better not change it.\n   *\n   * @module\n   * @param {String} str The string that you want to tokenize.\n   * @see elasticlunr.tokenizer.seperator\n   * @return {Array}\n   */\n\n\n  elasticlunr.tokenizer = function (str) {\n    if (!arguments.length || str === null || str === undefined) return [];\n\n    if (Array.isArray(str)) {\n      var arr = str.filter(function (token) {\n        if (token === null || token === undefined) {\n          return false;\n        }\n\n        return true;\n      });\n      arr = arr.map(function (t) {\n        return elasticlunr.utils.toString(t).toLowerCase();\n      });\n      var out = [];\n      arr.forEach(function (item) {\n        var tokens = item.split(elasticlunr.tokenizer.seperator);\n        out = out.concat(tokens);\n      }, this);\n      return out;\n    }\n\n    return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);\n  };\n  /**\n   * Default string seperator.\n   */\n\n\n  elasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;\n  /**\n   * The sperator used to split a string into tokens. Override this property to change the behaviour of\n   * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see elasticlunr.tokenizer\n   */\n\n  elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  /**\n   * Set up customized string seperator\n   *\n   * @param {Object} sep The customized seperator that you want to use to tokenize a string.\n   */\n\n  elasticlunr.tokenizer.setSeperator = function (sep) {\n    if (sep !== null && sep !== undefined && typeof sep === 'object') {\n      elasticlunr.tokenizer.seperator = sep;\n    }\n  };\n  /**\n   * Reset string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.resetSeperator = function () {\n    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;\n  };\n  /**\n   * Get string seperator\n   *\n   */\n\n\n  elasticlunr.tokenizer.getSeperator = function () {\n    return elasticlunr.tokenizer.seperator;\n  };\n  /*!\n   * elasticlunr.Pipeline\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Pipelines maintain an ordered list of functions to be applied to \n   * both documents tokens and query tokens.\n   *\n   * An instance of elasticlunr.Index will contain a pipeline\n   * with a trimmer, a stop word filter, an English stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline, it will call each function in turn.\n   *\n   * The output of the functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Pipeline = function () {\n    this._queue = [];\n  };\n\n  elasticlunr.Pipeline.registeredFunctions = {};\n  /**\n   * Register a function in the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {Function} fn The function to register.\n   * @param {String} label The label to register this function with\n   * @memberOf Pipeline\n   */\n\n  elasticlunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions) {\n      elasticlunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    elasticlunr.Pipeline.registeredFunctions[label] = fn;\n  };\n  /**\n   * Get a registered function in the pipeline.\n   *\n   * @param {String} label The label of registered function.\n   * @return {Function}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.getRegisteredFunction = function (label) {\n    if (label in elasticlunr.Pipeline.registeredFunctions !== true) {\n      return null;\n    }\n\n    return elasticlunr.Pipeline.registeredFunctions[label];\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {Function} fn The function to check for.\n   * @private\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with elasticlunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised The serialised pipeline to load.\n   * @return {elasticlunr.Pipeline}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.load = function (serialised) {\n    var pipeline = new elasticlunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load un-registered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {Function} functions Any number of functions to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._queue.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos + 1, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   * If existingFn is not found, throw an Exception.\n   *\n   * @param {Function} existingFn A function that already exists in the pipeline.\n   * @param {Function} newFn The new function to add to the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._queue.indexOf(existingFn);\n\n    if (pos === -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._queue.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {Function} fn The function to remove from the pipeline.\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._queue.indexOf(fn);\n\n    if (pos === -1) {\n      return;\n    }\n\n    this._queue.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that registered in the pipeline against the\n   * input tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.run = function (tokens) {\n    var out = [],\n        tokenLength = tokens.length,\n        pipelineLength = this._queue.length;\n\n    for (var i = 0; i < tokenLength; i++) {\n      var token = tokens[i];\n\n      for (var j = 0; j < pipelineLength; j++) {\n        token = this._queue[j](token, i, tokens);\n        if (token === void 0 || token === null) break;\n      }\n\n      ;\n      if (token !== void 0 && token !== null) out.push(token);\n    }\n\n    ;\n    return out;\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.reset = function () {\n    this._queue = [];\n  };\n  /**\n   * Get the pipeline if user want to check the pipeline.\n   *\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.get = function () {\n    return this._queue;\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   * Only serialize pipeline function's name. Not storing function, so when\n   * loading the archived JSON index file, corresponding pipeline function is \n   * added by registered function of elasticlunr.Pipeline.registeredFunctions\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @return {Array}\n   * @memberOf Pipeline\n   */\n\n\n  elasticlunr.Pipeline.prototype.toJSON = function () {\n    return this._queue.map(function (fn) {\n      elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * elasticlunr.Index\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.Index is object that manages a search index.  It contains the indexes\n   * and stores all the tokens and document lookups.  It also provides the main\n   * user facing API for the library.\n   *\n   * @constructor\n   */\n\n\n  elasticlunr.Index = function () {\n    this._fields = [];\n    this._ref = 'id';\n    this.pipeline = new elasticlunr.Pipeline();\n    this.documentStore = new elasticlunr.DocumentStore();\n    this.index = {};\n    this.eventEmitter = new elasticlunr.EventEmitter();\n    this._idfCache = {};\n    this.on('add', 'remove', 'update', function () {\n      this._idfCache = {};\n    }.bind(this));\n  };\n  /**\n   * Bind a handler to events being emitted by the index.\n   *\n   * The handler can be bound to many events at the same time.\n   *\n   * @param {String} [eventName] The name(s) of events to bind the function to.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.on = function () {\n    var args = Array.prototype.slice.call(arguments);\n    return this.eventEmitter.addListener.apply(this.eventEmitter, args);\n  };\n  /**\n   * Removes a handler from an event being emitted by the index.\n   *\n   * @param {String} eventName The name of events to remove the function from.\n   * @param {Function} fn The serialised set to load.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.off = function (name, fn) {\n    return this.eventEmitter.removeListener(name, fn);\n  };\n  /**\n   * Loads a previously serialised index.\n   *\n   * Issues a warning if the index being imported was serialised\n   * by a different version of elasticlunr.\n   *\n   * @param {Object} serialisedData The serialised set to load.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.load = function (serialisedData) {\n    if (serialisedData.version !== elasticlunr.version) {\n      elasticlunr.utils.warn('version mismatch: current ' + elasticlunr.version + ' importing ' + serialisedData.version);\n    }\n\n    var idx = new this();\n    idx._fields = serialisedData.fields;\n    idx._ref = serialisedData.ref;\n    idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);\n    idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);\n    idx.index = {};\n\n    for (var field in serialisedData.index) {\n      idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);\n    }\n\n    return idx;\n  };\n  /**\n   * Adds a field to the list of fields that will be searchable within documents in the index.\n   *\n   * Remember that inner index is build based on field, which means each field has one inverted index.\n   *\n   * Fields should be added before any documents are added to the index, fields\n   * that are added after documents are added to the index will only apply to new\n   * documents added to the index.\n   *\n   * @param {String} fieldName The name of the field within the document that should be indexed\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addField = function (fieldName) {\n    this._fields.push(fieldName);\n\n    this.index[fieldName] = new elasticlunr.InvertedIndex();\n    return this;\n  };\n  /**\n   * Sets the property used to uniquely identify documents added to the index,\n   * by default this property is 'id'.\n   *\n   * This should only be changed before adding documents to the index, changing\n   * the ref property without resetting the index can lead to unexpected results.\n   *\n   * @param {String} refName The property to use to uniquely identify the\n   * documents in the index.\n   * @param {Boolean} emitEvent Whether to emit add events, defaults to true\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.setRef = function (refName) {\n    this._ref = refName;\n    return this;\n  };\n  /**\n   *\n   * Set if the JSON format original documents are save into elasticlunr.DocumentStore\n   *\n   * Defaultly save all the original JSON documents.\n   *\n   * @param {Boolean} save Whether to save the original JSON documents.\n   * @return {elasticlunr.Index}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.saveDocument = function (save) {\n    this.documentStore = new elasticlunr.DocumentStore(save);\n    return this;\n  };\n  /**\n   * Add a JSON format document to the index.\n   *\n   * This is the way new documents enter the index, this function will run the\n   * fields from the document through the index's pipeline and then add it to\n   * the index, it will then show up in search results.\n   *\n   * An 'add' event is emitted with the document that has been added and the index\n   * the document has been added to. This event can be silenced by passing false\n   * as the second argument to add.\n   *\n   * @param {Object} doc The JSON format document to add to the index.\n   * @param {Boolean} emitEvent Whether or not to emit events, default true.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    this.documentStore.addDoc(docRef, doc);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      this.documentStore.addFieldLength(docRef, field, fieldTokens.length);\n      var tokenCount = {};\n      fieldTokens.forEach(function (token) {\n        if (token in tokenCount) tokenCount[token] += 1;else tokenCount[token] = 1;\n      }, this);\n\n      for (var token in tokenCount) {\n        var termFrequency = tokenCount[token];\n        termFrequency = Math.sqrt(termFrequency);\n        this.index[field].addToken(token, {\n          ref: docRef,\n          tf: termFrequency\n        });\n      }\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('add', doc, this);\n  };\n  /**\n   * Removes a document from the index by doc ref.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed.\n   *\n   * @param {String|Integer} docRef The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {\n    if (!docRef) return;\n\n    if (this.documentStore.isDocStored() === false) {\n      return;\n    }\n\n    if (!this.documentStore.hasDoc(docRef)) return;\n    var doc = this.documentStore.getDoc(docRef);\n    this.removeDoc(doc, false);\n  };\n  /**\n   * Removes a document from the index.\n   * This remove operation could work even the original doc is not store in the DocumentStore.\n   *\n   * To make sure documents no longer show up in search results they can be\n   * removed from the index using this method.\n   *\n   * A 'remove' event is emitted with the document that has been removed and the index\n   * the document has been removed from. This event can be silenced by passing false\n   * as the second argument to remove.\n   *\n   *\n   * @param {Object} doc The document ref to remove from the index.\n   * @param {Boolean} emitEvent Whether to emit remove events, defaults to true\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {\n    if (!doc) return;\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    var docRef = doc[this._ref];\n    if (!this.documentStore.hasDoc(docRef)) return;\n    this.documentStore.removeDoc(docRef);\n\n    this._fields.forEach(function (field) {\n      var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));\n      fieldTokens.forEach(function (token) {\n        this.index[field].removeToken(token, docRef);\n      }, this);\n    }, this);\n\n    if (emitEvent) this.eventEmitter.emit('remove', doc, this);\n  };\n  /**\n   * Updates a document in the index.\n   *\n   * When a document contained within the index gets updated, fields changed,\n   * added or removed, to make sure it correctly matched against search queries,\n   * it should be updated in the index.\n   *\n   * This method is just a wrapper around `remove` and `add`\n   *\n   * An 'update' event is emitted with the document that has been updated and the index.\n   * This event can be silenced by passing false as the second argument to update. Only\n   * an update event will be fired, the 'add' and 'remove' events of the underlying calls\n   * are silenced.\n   *\n   * @param {Object} doc The document to update in the index.\n   * @param {Boolean} emitEvent Whether to emit update events, defaults to true\n   * @see Index.prototype.remove\n   * @see Index.prototype.add\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {\n    var emitEvent = emitEvent === undefined ? true : emitEvent;\n    this.removeDocByRef(doc[this._ref], false);\n    this.addDoc(doc, false);\n    if (emitEvent) this.eventEmitter.emit('update', doc, this);\n  };\n  /**\n   * Calculates the inverse document frequency for a token within the index of a field.\n   *\n   * @param {String} token The token to calculate the idf of.\n   * @param {String} field The field to compute idf.\n   * @see Index.prototype.idf\n   * @private\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.idf = function (term, field) {\n    var cacheKey = \"@\" + field + '/' + term;\n    if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];\n    var df = this.index[field].getDocFreq(term);\n    var idf = 1 + Math.log(this.documentStore.length / (df + 1));\n    this._idfCache[cacheKey] = idf;\n    return idf;\n  };\n  /**\n   * get fields of current index instance\n   *\n   * @return {Array}\n   */\n\n\n  elasticlunr.Index.prototype.getFields = function () {\n    return this._fields.slice();\n  };\n  /**\n   * Searches the index using the passed query.\n   * Queries should be a string, multiple words are allowed.\n   *\n   * If config is null, will search all fields defaultly, and lead to OR based query.\n   * If config is specified, will search specified with query time boosting.\n   *\n   * All query tokens are passed through the same pipeline that document tokens\n   * are passed through, so any language processing involved will be run on every\n   * query term.\n   *\n   * Each query term is expanded, so that the term 'he' might be expanded to\n   * 'hello' and 'help' if those terms were already included in the index.\n   *\n   * Matching documents are returned as an array of objects, each object contains\n   * the matching document ref, as set for this index, and the similarity score\n   * for this document against the query.\n   *\n   * @param {String} query The query to search the index with.\n   * @param {JSON} userConfig The user query config, JSON format.\n   * @return {Object}\n   * @see Index.prototype.idf\n   * @see Index.prototype.documentVector\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.search = function (query, userConfig) {\n    if (!query) return [];\n    var configStr = null;\n\n    if (userConfig != null) {\n      configStr = JSON.stringify(userConfig);\n    }\n\n    var config = new elasticlunr.Configuration(configStr, this.getFields()).get();\n    var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));\n    var queryResults = {};\n\n    for (var field in config) {\n      var fieldSearchResults = this.fieldSearch(queryTokens, field, config);\n      var fieldBoost = config[field].boost;\n\n      for (var docRef in fieldSearchResults) {\n        fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;\n      }\n\n      for (var docRef in fieldSearchResults) {\n        if (docRef in queryResults) {\n          queryResults[docRef] += fieldSearchResults[docRef];\n        } else {\n          queryResults[docRef] = fieldSearchResults[docRef];\n        }\n      }\n    }\n\n    var results = [];\n\n    for (var docRef in queryResults) {\n      results.push({\n        ref: docRef,\n        score: queryResults[docRef]\n      });\n    }\n\n    results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n    return results;\n  };\n  /**\n   * search queryTokens in specified field.\n   *\n   * @param {Array} queryTokens The query tokens to query in this field.\n   * @param {String} field Field to query in.\n   * @param {elasticlunr.Configuration} config The user query config, JSON format.\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {\n    var booleanType = config[fieldName].bool;\n    var expand = config[fieldName].expand;\n    var boost = config[fieldName].boost;\n    var scores = null;\n    var docTokens = {}; // Do nothing if the boost is 0\n\n    if (boost === 0) {\n      return;\n    }\n\n    queryTokens.forEach(function (token) {\n      var tokens = [token];\n\n      if (expand == true) {\n        tokens = this.index[fieldName].expandToken(token);\n      } // Consider every query token in turn. If expanded, each query token\n      // corresponds to a set of tokens, which is all tokens in the \n      // index matching the pattern queryToken* .\n      // For the set of tokens corresponding to a query token, find and score\n      // all matching documents. Store those scores in queryTokenScores, \n      // keyed by docRef.\n      // Then, depending on the value of booleanType, combine the scores\n      // for this query token with previous scores.  If booleanType is OR,\n      // then merge the scores by summing into the accumulated total, adding\n      // new document scores are required (effectively a union operator). \n      // If booleanType is AND, accumulate scores only if the document \n      // has previously been scored by another query token (an intersection\n      // operation0. \n      // Furthermore, since when booleanType is AND, additional \n      // query tokens can't add new documents to the result set, use the\n      // current document set to limit the processing of each new query \n      // token for efficiency (i.e., incremental intersection).\n\n\n      var queryTokenScores = {};\n      tokens.forEach(function (key) {\n        var docs = this.index[fieldName].getDocs(key);\n        var idf = this.idf(key, fieldName);\n\n        if (scores && booleanType == 'AND') {\n          // special case, we can rule out documents that have been\n          // already been filtered out because they weren't scored\n          // by previous query token passes.\n          var filteredDocs = {};\n\n          for (var docRef in scores) {\n            if (docRef in docs) {\n              filteredDocs[docRef] = docs[docRef];\n            }\n          }\n\n          docs = filteredDocs;\n        } // only record appeared token for retrieved documents for the\n        // original token, not for expaned token.\n        // beause for doing coordNorm for a retrieved document, coordNorm only care how many\n        // query token appear in that document.\n        // so expanded token should not be added into docTokens, if added, this will pollute the\n        // coordNorm\n\n\n        if (key == token) {\n          this.fieldSearchStats(docTokens, key, docs);\n        }\n\n        for (var docRef in docs) {\n          var tf = this.index[fieldName].getTermFrequency(key, docRef);\n          var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);\n          var fieldLengthNorm = 1;\n\n          if (fieldLength != 0) {\n            fieldLengthNorm = 1 / Math.sqrt(fieldLength);\n          }\n\n          var penality = 1;\n\n          if (key != token) {\n            // currently I'm not sure if this penality is enough,\n            // need to do verification\n            penality = (1 - (key.length - token.length) / key.length) * 0.15;\n          }\n\n          var score = tf * idf * fieldLengthNorm * penality;\n\n          if (docRef in queryTokenScores) {\n            queryTokenScores[docRef] += score;\n          } else {\n            queryTokenScores[docRef] = score;\n          }\n        }\n      }, this);\n      scores = this.mergeScores(scores, queryTokenScores, booleanType);\n    }, this);\n    scores = this.coordNorm(scores, docTokens, queryTokens.length);\n    return scores;\n  };\n  /**\n   * Merge the scores from one set of tokens into an accumulated score table.\n   * Exact operation depends on the op parameter. If op is 'AND', then only the\n   * intersection of the two score lists is retained. Otherwise, the union of\n   * the two score lists is returned. For internal use only.\n   *\n   * @param {Object} bool accumulated scores. Should be null on first call.\n   * @param {String} scores new scores to merge into accumScores.\n   * @param {Object} op merge operation (should be 'AND' or 'OR').\n   *\n   */\n\n\n  elasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {\n    if (!accumScores) {\n      return scores;\n    }\n\n    if (op == 'AND') {\n      var intersection = {};\n\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          intersection[docRef] = accumScores[docRef] + scores[docRef];\n        }\n      }\n\n      return intersection;\n    } else {\n      for (var docRef in scores) {\n        if (docRef in accumScores) {\n          accumScores[docRef] += scores[docRef];\n        } else {\n          accumScores[docRef] = scores[docRef];\n        }\n      }\n\n      return accumScores;\n    }\n  };\n  /**\n   * Record the occuring query token of retrieved doc specified by doc field.\n   * Only for inner user.\n   *\n   * @param {Object} docTokens a data structure stores which token appears in the retrieved doc.\n   * @param {String} token query token\n   * @param {Object} docs the retrieved documents of the query token\n   *\n   */\n\n\n  elasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {\n    for (var doc in docs) {\n      if (doc in docTokens) {\n        docTokens[doc].push(token);\n      } else {\n        docTokens[doc] = [token];\n      }\n    }\n  };\n  /**\n   * coord norm the score of a doc.\n   * if a doc contain more query tokens, then the score will larger than the doc\n   * contains less query tokens.\n   *\n   * only for inner use.\n   *\n   * @param {Object} results first results\n   * @param {Object} docs field search results of a token\n   * @param {Integer} n query token number\n   * @return {Object}\n   */\n\n\n  elasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {\n    for (var doc in scores) {\n      if (!(doc in docTokens)) continue;\n      var tokens = docTokens[doc].length;\n      scores[doc] = scores[doc] * tokens / n;\n    }\n\n    return scores;\n  };\n  /**\n   * Returns a representation of the index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.toJSON = function () {\n    var indexJson = {};\n\n    this._fields.forEach(function (field) {\n      indexJson[field] = this.index[field].toJSON();\n    }, this);\n\n    return {\n      version: elasticlunr.version,\n      fields: this._fields,\n      ref: this._ref,\n      documentStore: this.documentStore.toJSON(),\n      index: indexJson,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Applies a plugin to the current index.\n   *\n   * A plugin is a function that is called with the index as its context.\n   * Plugins can be used to customise or extend the behaviour the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied to the index.\n   *\n   * The plugin function will be called with the index as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index as its context.\n   *\n   * Example:\n   *\n   *     var myPlugin = function (idx, arg1, arg2) {\n   *       // `this` is the index to be extended\n   *       // apply any extensions etc here.\n   *     }\n   *\n   *     var idx = elasticlunr(function () {\n   *       this.use(myPlugin, 'arg1', 'arg2')\n   *     })\n   *\n   * @param {Function} plugin The plugin to apply.\n   * @memberOf Index\n   */\n\n\n  elasticlunr.Index.prototype.use = function (plugin) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    plugin.apply(this, args);\n  };\n  /*!\n   * elasticlunr.DocumentStore\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for\n   * documents stored in index.\n   *\n   * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document.\n   *\n   * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly.\n   * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user\n   * could not use JSON document to generate snippets of search results.\n   *\n   * @param {Boolean} save If the original JSON document should be stored.\n   * @constructor\n   * @module\n   */\n\n\n  elasticlunr.DocumentStore = function (save) {\n    if (save === null || save === undefined) {\n      this._save = true;\n    } else {\n      this._save = save;\n    }\n\n    this.docs = {};\n    this.docInfo = {};\n    this.length = 0;\n  };\n  /**\n   * Loads a previously serialised document store\n   *\n   * @param {Object} serialisedData The serialised document store to load.\n   * @return {elasticlunr.DocumentStore}\n   */\n\n\n  elasticlunr.DocumentStore.load = function (serialisedData) {\n    var store = new this();\n    store.length = serialisedData.length;\n    store.docs = serialisedData.docs;\n    store.docInfo = serialisedData.docInfo;\n    store._save = serialisedData.save;\n    return store;\n  };\n  /**\n   * check if current instance store the original doc\n   *\n   * @return {Boolean}\n   */\n\n\n  elasticlunr.DocumentStore.prototype.isDocStored = function () {\n    return this._save;\n  };\n  /**\n   * Stores the given doc in the document store against the given id.\n   * If docRef already exist, then update doc.\n   *\n   * Document is store by original JSON format, then you could use original document to generate search snippets.\n   *\n   * @param {Integer|String} docRef The key used to store the JSON format doc.\n   * @param {Object} doc The JSON format doc.\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {\n    if (!this.hasDoc(docRef)) this.length++;\n\n    if (this._save === true) {\n      this.docs[docRef] = clone(doc);\n    } else {\n      this.docs[docRef] = null;\n    }\n  };\n  /**\n   * Retrieves the JSON doc from the document store for a given key.\n   *\n   * If docRef not found, return null.\n   * If user set not storing the documents, return null.\n   *\n   * @param {Integer|String} docRef The key to lookup and retrieve from the document store.\n   * @return {Object}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getDoc = function (docRef) {\n    if (this.hasDoc(docRef) === false) return null;\n    return this.docs[docRef];\n  };\n  /**\n   * Checks whether the document store contains a key (docRef).\n   *\n   * @param {Integer|String} docRef The id to look up in the document store.\n   * @return {Boolean}\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {\n    return docRef in this.docs;\n  };\n  /**\n   * Removes the value for a key in the document store.\n   *\n   * @param {Integer|String} docRef The id to remove from the document store.\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {\n    if (!this.hasDoc(docRef)) return;\n    delete this.docs[docRef];\n    delete this.docInfo[docRef];\n    this.length--;\n  };\n  /**\n   * Add field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    if (!this.docInfo[docRef]) this.docInfo[docRef] = {};\n    this.docInfo[docRef][fieldName] = length;\n  };\n  /**\n   * Update field length of a document's field tokens from pipeline results.\n   * The field length of a document is used to do field length normalization even without the original JSON document stored.\n   *\n   * @param {Integer|String} docRef document's id or reference\n   * @param {String} fieldName field name\n   * @param {Integer} length field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {\n    if (docRef === null || docRef === undefined) return;\n    if (this.hasDoc(docRef) == false) return;\n    this.addFieldLength(docRef, fieldName, length);\n  };\n  /**\n   * get field length of a document by docRef\n   *\n   * @param {Integer|String} docRef document id or reference\n   * @param {String} fieldName field name\n   * @return {Integer} field length\n   */\n\n\n  elasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {\n    if (docRef === null || docRef === undefined) return 0;\n    if (!(docRef in this.docs)) return 0;\n    if (!(fieldName in this.docInfo[docRef])) return 0;\n    return this.docInfo[docRef][fieldName];\n  };\n  /**\n   * Returns a JSON representation of the document store used for serialisation.\n   *\n   * @return {Object} JSON format\n   * @memberOf DocumentStore\n   */\n\n\n  elasticlunr.DocumentStore.prototype.toJSON = function () {\n    return {\n      docs: this.docs,\n      docInfo: this.docInfo,\n      length: this.length,\n      save: this._save\n    };\n  };\n  /**\n   * Cloning object\n   *\n   * @param {Object} object in JSON format\n   * @return {Object} copied object\n   */\n\n\n  function clone(obj) {\n    if (null === obj || \"object\" !== typeof obj) return obj;\n    var copy = obj.constructor();\n\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n\n    return copy;\n  }\n  /*!\n   * elasticlunr.stemmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @module\n   * @param {String} str The string to stem\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n\n  elasticlunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return porterStemmer;\n  }();\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');\n  /*!\n   * elasticlunr.stopWordFilter\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.stopWordFilter is an English language stop words filter, any words\n   * contained in the stop word list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.stopWordFilter = function (token) {\n    if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {\n      return token;\n    }\n  };\n  /**\n   * Remove predefined stop words\n   * if user want to use customized stop words, user could use this function to delete\n   * all predefined stopwords.\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.clearStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = {};\n  };\n  /**\n   * Add customized stop words\n   * user could use this function to add customized stop words\n   * \n   * @params {Array} words customized stop words\n   * @return {null}\n   */\n\n\n  elasticlunr.addStopWords = function (words) {\n    if (words == null || Array.isArray(words) === false) return;\n    words.forEach(function (word) {\n      elasticlunr.stopWordFilter.stopWords[word] = true;\n    }, this);\n  };\n  /**\n   * Reset to default stop words\n   * user could use this function to restore default stop words\n   *\n   * @return {null}\n   */\n\n\n  elasticlunr.resetStopWords = function () {\n    elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  };\n\n  elasticlunr.defaultStopWords = {\n    \"\": true,\n    \"a\": true,\n    \"able\": true,\n    \"about\": true,\n    \"across\": true,\n    \"after\": true,\n    \"all\": true,\n    \"almost\": true,\n    \"also\": true,\n    \"am\": true,\n    \"among\": true,\n    \"an\": true,\n    \"and\": true,\n    \"any\": true,\n    \"are\": true,\n    \"as\": true,\n    \"at\": true,\n    \"be\": true,\n    \"because\": true,\n    \"been\": true,\n    \"but\": true,\n    \"by\": true,\n    \"can\": true,\n    \"cannot\": true,\n    \"could\": true,\n    \"dear\": true,\n    \"did\": true,\n    \"do\": true,\n    \"does\": true,\n    \"either\": true,\n    \"else\": true,\n    \"ever\": true,\n    \"every\": true,\n    \"for\": true,\n    \"from\": true,\n    \"get\": true,\n    \"got\": true,\n    \"had\": true,\n    \"has\": true,\n    \"have\": true,\n    \"he\": true,\n    \"her\": true,\n    \"hers\": true,\n    \"him\": true,\n    \"his\": true,\n    \"how\": true,\n    \"however\": true,\n    \"i\": true,\n    \"if\": true,\n    \"in\": true,\n    \"into\": true,\n    \"is\": true,\n    \"it\": true,\n    \"its\": true,\n    \"just\": true,\n    \"least\": true,\n    \"let\": true,\n    \"like\": true,\n    \"likely\": true,\n    \"may\": true,\n    \"me\": true,\n    \"might\": true,\n    \"most\": true,\n    \"must\": true,\n    \"my\": true,\n    \"neither\": true,\n    \"no\": true,\n    \"nor\": true,\n    \"not\": true,\n    \"of\": true,\n    \"off\": true,\n    \"often\": true,\n    \"on\": true,\n    \"only\": true,\n    \"or\": true,\n    \"other\": true,\n    \"our\": true,\n    \"own\": true,\n    \"rather\": true,\n    \"said\": true,\n    \"say\": true,\n    \"says\": true,\n    \"she\": true,\n    \"should\": true,\n    \"since\": true,\n    \"so\": true,\n    \"some\": true,\n    \"than\": true,\n    \"that\": true,\n    \"the\": true,\n    \"their\": true,\n    \"them\": true,\n    \"then\": true,\n    \"there\": true,\n    \"these\": true,\n    \"they\": true,\n    \"this\": true,\n    \"tis\": true,\n    \"to\": true,\n    \"too\": true,\n    \"twas\": true,\n    \"us\": true,\n    \"wants\": true,\n    \"was\": true,\n    \"we\": true,\n    \"were\": true,\n    \"what\": true,\n    \"when\": true,\n    \"where\": true,\n    \"which\": true,\n    \"while\": true,\n    \"who\": true,\n    \"whom\": true,\n    \"why\": true,\n    \"will\": true,\n    \"with\": true,\n    \"would\": true,\n    \"yet\": true,\n    \"you\": true,\n    \"your\": true\n  };\n  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;\n  elasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * elasticlunr.trimmer\n   * Copyright (C) 2016 Oliver Nightingale\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /**\n   * elasticlunr.trimmer is a pipeline function for trimming non word\n   * characters from the begining and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @module\n   * @param {String} token The token to pass through the filter\n   * @return {String}\n   * @see elasticlunr.Pipeline\n   */\n\n  elasticlunr.trimmer = function (token) {\n    if (token === null || token === undefined) {\n      throw new Error('token should not be undefined');\n    }\n\n    return token.replace(/^\\W+/, '').replace(/\\W+$/, '');\n  };\n\n  elasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');\n  /*!\n   * elasticlunr.InvertedIndex\n   * Copyright (C) 2016 Wei Song\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * elasticlunr.InvertedIndex is used for efficiently storing and\n   * lookup of documents that contain a given token.\n   *\n   * @constructor\n   */\n\n  elasticlunr.InvertedIndex = function () {\n    this.root = {\n      docs: {},\n      df: 0\n    };\n  };\n  /**\n   * Loads a previously serialised inverted index.\n   *\n   * @param {Object} serialisedData The serialised inverted index to load.\n   * @return {elasticlunr.InvertedIndex}\n   */\n\n\n  elasticlunr.InvertedIndex.load = function (serialisedData) {\n    var idx = new this();\n    idx.root = serialisedData.root;\n    return idx;\n  };\n  /**\n   * Adds a {token: tokenInfo} pair to the inverted index.\n   * If the token already exist, then update the tokenInfo.\n   *\n   * tokenInfo format: { ref: 1, tf: 2}\n   * tokenInfor should contains the document's ref and the tf(token frequency) of that token in\n   * the document.\n   *\n   * By default this function starts at the root of the current inverted index, however\n   * it can start at any node of the inverted index if required.\n   *\n   * @param {String} token \n   * @param {Object} tokenInfo format: { ref: 1, tf: 2}\n   * @param {Object} root An optional node at which to start looking for the\n   * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex\n   * is used.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {\n    var root = root || this.root,\n        idx = 0;\n\n    while (idx <= token.length - 1) {\n      var key = token[idx];\n      if (!(key in root)) root[key] = {\n        docs: {},\n        df: 0\n      };\n      idx += 1;\n      root = root[key];\n    }\n\n    var docRef = tokenInfo.ref;\n\n    if (!root.docs[docRef]) {\n      // if this doc not exist, then add this doc\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n      root.df += 1;\n    } else {\n      // if this doc already exist, then update tokenInfo\n      root.docs[docRef] = {\n        tf: tokenInfo.tf\n      };\n    }\n  };\n  /**\n   * Checks whether a token is in this elasticlunr.InvertedIndex.\n   * \n   *\n   * @param {String} token The token to be checked\n   * @return {Boolean}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.hasToken = function (token) {\n    if (!token) return false;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return false;\n      node = node[token[i]];\n    }\n\n    return true;\n  };\n  /**\n   * Retrieve a node from the inverted index for a given token.\n   * If token not found in this InvertedIndex, return null.\n   * \n   *\n   * @param {String} token The token to get the node for.\n   * @return {Object}\n   * @see InvertedIndex.prototype.get\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getNode = function (token) {\n    if (!token) return null;\n    var node = this.root;\n\n    for (var i = 0; i < token.length; i++) {\n      if (!node[token[i]]) return null;\n      node = node[token[i]];\n    }\n\n    return node;\n  };\n  /**\n   * Retrieve the documents of a given token.\n   * If token not found, return {}.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocs = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return {};\n    }\n\n    return node.docs;\n  };\n  /**\n   * Retrieve term frequency of given token in given docRef.\n   * If token or docRef not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @param {String|Integer} docRef\n   * @return {Integer}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    if (!(docRef in node.docs)) {\n      return 0;\n    }\n\n    return node.docs[docRef].tf;\n  };\n  /**\n   * Retrieve the document frequency of given token.\n   * If token not found, return 0.\n   *\n   *\n   * @param {String} token The token to get the documents for.\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {\n    var node = this.getNode(token);\n\n    if (node == null) {\n      return 0;\n    }\n\n    return node.df;\n  };\n  /**\n   * Remove the document identified by document's ref from the token in the inverted index.\n   *\n   *\n   * @param {String} token Remove the document from which token.\n   * @param {String} ref The ref of the document to remove from given token.\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {\n    if (!token) return;\n    var node = this.getNode(token);\n    if (node == null) return;\n\n    if (ref in node.docs) {\n      delete node.docs[ref];\n      node.df -= 1;\n    }\n  };\n  /**\n   * Find all the possible suffixes of given token using tokens currently in the inverted index.\n   * If token not found, return empty Array.\n   *\n   * @param {String} token The token to expand.\n   * @return {Array}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {\n    if (token == null || token == '') return [];\n    var memo = memo || [];\n\n    if (root == void 0) {\n      root = this.getNode(token);\n      if (root == null) return memo;\n    }\n\n    if (root.df > 0) memo.push(token);\n\n    for (var key in root) {\n      if (key === 'docs') continue;\n      if (key === 'df') continue;\n      this.expandToken(token + key, memo, root[key]);\n    }\n\n    return memo;\n  };\n  /**\n   * Returns a representation of the inverted index ready for serialisation.\n   *\n   * @return {Object}\n   * @memberOf InvertedIndex\n   */\n\n\n  elasticlunr.InvertedIndex.prototype.toJSON = function () {\n    return {\n      root: this.root\n    };\n  };\n  /*!\n   * elasticlunr.Configuration\n   * Copyright (C) 2016 Wei Song\n   */\n\n  /** \n   * elasticlunr.Configuration is used to analyze the user search configuration.\n   * \n   * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.\n   * \n   * Currently configuration supports:\n   * 1. query-time boosting, user could set how to boost each field.\n   * 2. boolean model chosing, user could choose which boolean model to use for each field.\n   * 3. token expandation, user could set token expand to True to improve Recall. Default is False.\n   * \n   * Query time boosting must be configured by field category, \"boolean\" model could be configured \n   * by both field category or globally as the following example. Field configuration for \"boolean\"\n   * will overwrite global configuration.\n   * Token expand could be configured both by field category or golbally. Local field configuration will\n   * overwrite global configuration.\n   * \n   * configuration example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"bool\" field configuation overwrite global configuation example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * \"expand\" example:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\"},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\",\n   *   expand: true\n   * }\n   * \n   * \"expand\" example for field category:\n   * {\n   *   fields:{ \n   *     title: {boost: 2, bool: \"AND\", expand: true},\n   *     body: {boost: 1}\n   *   },\n   *   bool: \"OR\"\n   * }\n   * \n   * setting the boost to 0 ignores the field (this will only search the title):\n   * {\n   *   fields:{\n   *     title: {boost: 1},\n   *     body: {boost: 0}\n   *   }\n   * }\n   *\n   * then, user could search with configuration to do query-time boosting.\n   * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});\n   * \n   * \n   * @constructor\n   * \n   * @param {String} config user configuration\n   * @param {Array} fields fields of index instance\n   * @module\n   */\n\n\n  elasticlunr.Configuration = function (config, fields) {\n    var config = config || '';\n\n    if (fields == undefined || fields == null) {\n      throw new Error('fields should not be null');\n    }\n\n    this.config = {};\n    var userConfig;\n\n    try {\n      userConfig = JSON.parse(config);\n      this.buildUserConfig(userConfig, fields);\n    } catch (error) {\n      elasticlunr.utils.warn('user configuration parse failed, will use default configuration');\n      this.buildDefaultConfig(fields);\n    }\n  };\n  /**\n   * Build default search configuration.\n   * \n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {\n    this.reset();\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: \"OR\",\n        expand: false\n      };\n    }, this);\n  };\n  /**\n   * Build user configuration.\n   * \n   * @param {JSON} config User JSON configuratoin\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {\n    var global_bool = \"OR\";\n    var global_expand = false;\n    this.reset();\n\n    if ('bool' in config) {\n      global_bool = config['bool'] || global_bool;\n    }\n\n    if ('expand' in config) {\n      global_expand = config['expand'] || global_expand;\n    }\n\n    if ('fields' in config) {\n      for (var field in config['fields']) {\n        if (fields.indexOf(field) > -1) {\n          var field_config = config['fields'][field];\n          var field_expand = global_expand;\n\n          if (field_config.expand != undefined) {\n            field_expand = field_config.expand;\n          }\n\n          this.config[field] = {\n            boost: field_config.boost || field_config.boost === 0 ? field_config.boost : 1,\n            bool: field_config.bool || global_bool,\n            expand: field_expand\n          };\n        } else {\n          elasticlunr.utils.warn('field name in user configuration not found in index instance fields');\n        }\n      }\n    } else {\n      this.addAllFields2UserConfig(global_bool, global_expand, fields);\n    }\n  };\n  /**\n   * Add all fields to user search configuration.\n   * \n   * @param {String} bool Boolean model\n   * @param {String} expand Expand model\n   * @param {Array} fields fields of index instance\n   */\n\n\n  elasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {\n    fields.forEach(function (field) {\n      this.config[field] = {\n        boost: 1,\n        bool: bool,\n        expand: expand\n      };\n    }, this);\n  };\n  /**\n   * get current user configuration\n   */\n\n\n  elasticlunr.Configuration.prototype.get = function () {\n    return this.config;\n  };\n  /**\n   * reset user search configuration.\n   */\n\n\n  elasticlunr.Configuration.prototype.reset = function () {\n    this.config = {};\n  };\n  /**\n   * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages.\n   * if elasticlunr.js support different languages by default, this will make elasticlunr.js\n   * much bigger that not good for browser usage.\n   *\n   */\n\n  /*!\n   * lunr.SortedSet\n   * Copyright (C) 2016 Oliver Nightingale\n   */\n\n  /**\n   * lunr.SortedSets are used to maintain an array of uniq values in a sorted\n   * order.\n   *\n   * @constructor\n   */\n\n\n  lunr.SortedSet = function () {\n    this.length = 0;\n    this.elements = [];\n  };\n  /**\n   * Loads a previously serialised sorted set.\n   *\n   * @param {Array} serialisedData The serialised set to load.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.load = function (serialisedData) {\n    var set = new this();\n    set.elements = serialisedData;\n    set.length = serialisedData.length;\n    return set;\n  };\n  /**\n   * Inserts new items into the set in the correct position to maintain the\n   * order.\n   *\n   * @param {Object} The objects to add to this set.\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.add = function () {\n    var i, element;\n\n    for (i = 0; i < arguments.length; i++) {\n      element = arguments[i];\n      if (~this.indexOf(element)) continue;\n      this.elements.splice(this.locationFor(element), 0, element);\n    }\n\n    this.length = this.elements.length;\n  };\n  /**\n   * Converts this sorted set into an array.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toArray = function () {\n    return this.elements.slice();\n  };\n  /**\n   * Creates a new array with the results of calling a provided function on every\n   * element in this sorted set.\n   *\n   * Delegates to Array.prototype.map and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * for the function fn.\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.map = function (fn, ctx) {\n    return this.elements.map(fn, ctx);\n  };\n  /**\n   * Executes a provided function once per sorted set element.\n   *\n   * Delegates to Array.prototype.forEach and has the same signature.\n   *\n   * @param {Function} fn The function that is called on each element of the\n   * set.\n   * @param {Object} ctx An optional object that can be used as the context\n   * @memberOf SortedSet\n   * for the function fn.\n   */\n\n\n  lunr.SortedSet.prototype.forEach = function (fn, ctx) {\n    return this.elements.forEach(fn, ctx);\n  };\n  /**\n   * Returns the index at which a given element can be found in the\n   * sorted set, or -1 if it is not present.\n   *\n   * @param {Object} elem The object to locate in the sorted set.\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.indexOf = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem === elem) return pivot;\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem === elem) return pivot;\n    return -1;\n  };\n  /**\n   * Returns the position within the sorted set that an element should be\n   * inserted at to maintain the current order of the set.\n   *\n   * This function assumes that the element to search for does not already exist\n   * in the sorted set.\n   *\n   * @param {Object} elem The elem to find the position for in the set\n   * @returns {Number}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.locationFor = function (elem) {\n    var start = 0,\n        end = this.elements.length,\n        sectionLength = end - start,\n        pivot = start + Math.floor(sectionLength / 2),\n        pivotElem = this.elements[pivot];\n\n    while (sectionLength > 1) {\n      if (pivotElem < elem) start = pivot;\n      if (pivotElem > elem) end = pivot;\n      sectionLength = end - start;\n      pivot = start + Math.floor(sectionLength / 2);\n      pivotElem = this.elements[pivot];\n    }\n\n    if (pivotElem > elem) return pivot;\n    if (pivotElem < elem) return pivot + 1;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the intersection\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to intersect with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.intersect = function (otherSet) {\n    var intersectSet = new lunr.SortedSet(),\n        i = 0,\n        j = 0,\n        a_len = this.length,\n        b_len = otherSet.length,\n        a = this.elements,\n        b = otherSet.elements;\n\n    while (true) {\n      if (i > a_len - 1 || j > b_len - 1) break;\n\n      if (a[i] === b[j]) {\n        intersectSet.add(a[i]);\n        i++, j++;\n        continue;\n      }\n\n      if (a[i] < b[j]) {\n        i++;\n        continue;\n      }\n\n      if (a[i] > b[j]) {\n        j++;\n        continue;\n      }\n    }\n\n    ;\n    return intersectSet;\n  };\n  /**\n   * Makes a copy of this set\n   *\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.clone = function () {\n    var clone = new lunr.SortedSet();\n    clone.elements = this.toArray();\n    clone.length = clone.elements.length;\n    return clone;\n  };\n  /**\n   * Creates a new lunr.SortedSet that contains the elements in the union\n   * of this set and the passed set.\n   *\n   * @param {lunr.SortedSet} otherSet The set to union with this set.\n   * @returns {lunr.SortedSet}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.union = function (otherSet) {\n    var longSet, shortSet, unionSet;\n\n    if (this.length >= otherSet.length) {\n      longSet = this, shortSet = otherSet;\n    } else {\n      longSet = otherSet, shortSet = this;\n    }\n\n    unionSet = longSet.clone();\n\n    for (var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++) {\n      unionSet.add(shortSetElements[i]);\n    }\n\n    return unionSet;\n  };\n  /**\n   * Returns a representation of the sorted set ready for serialisation.\n   *\n   * @returns {Array}\n   * @memberOf SortedSet\n   */\n\n\n  lunr.SortedSet.prototype.toJSON = function () {\n    return this.toArray();\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.elasticlunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return elasticlunr;\n  });\n})();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"tags-module--tags--18VzS\"};"],"sourceRoot":""}