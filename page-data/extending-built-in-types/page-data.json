{"componentChunkName":"component---src-templates-log-post-jsx","path":"/extending-built-in-types/","result":{"data":{"markdownRemark":{"html":"<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// Simple solution</span>\n<span class=\"token punctuation\">(</span>document <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monkey <span class=\"token operator\">=</span> <span class=\"token string\">'Tamarin'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// OK</span>\n\n<span class=\"token comment\">// But problematic</span>\n<span class=\"token punctuation\">(</span>document <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monky <span class=\"token operator\">=</span> <span class=\"token string\">'Tamarin'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Also OK, misspelled</span>\n<span class=\"token punctuation\">(</span>document <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monkey <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">Tamarin</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Also OK, wrong type</span>\n\n<span class=\"token comment\">// Better solution</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">MonkeyDocument</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Document</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Genus or species of monkey patch */</span>\n  monkey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">(</span>document <span class=\"token keyword\">as</span> MonkeyDocument<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monkey <span class=\"token operator\">=</span> <span class=\"token string\">'Macaque'</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Extending built-in types","date":"sep 14, 2020","tags":["typescript","types"]}}},"pageContext":{"slug":"/extending-built-in-types/"}},"staticQueryHashes":[]}